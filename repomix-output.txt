This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-05-17T21:24:17.893Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
src/
  app/
    about/
      page.tsx
    globals.css
    layout.tsx
    page.tsx
  components/
    cta/
      CtaModal.tsx
    home/
      HeroSection.tsx
      ServiceAreas.tsx
      Services.tsx
      TrustSection.tsx
    ui/
      button.tsx
      dialog.tsx
      navigation-menu.tsx
      sheet.tsx
    Footer.tsx
    Navbar.tsx
  lib/
    utils.ts
.eslintrc.js
.eslintrc.json
.gitignore
.prettierrc
components.json
next.config.mjs
package.json
postcss.config.mjs
README.md
tailwind.config.ts
tsconfig.json

================================================================
Files
================================================================

================
File: src/app/about/page.tsx
================
import Navbar from '@/components/Navbar'
import Footer from '@/components/Footer'
import CTASection from '@/components/cta/CtaSection'
import Image from 'next/image'

export default function AboutPage() {
  return (
    <div className="flex flex-col min-h-screen">
      <Navbar />

      <main className="bg-primary-black text-white px-8 md:px-16 lg:px-24 py-20">
        <div className="max-w-5xl mx-auto">
          <h1 className="font-poppins text-4xl md:text-5xl font-bold text-primary mb-6">
            Our Story
          </h1>

          <p className="text-white/90 text-lg mb-10">
            What started as a personal obsession with keeping things spotless
            quickly grew into a business focused on bringing the same level of
            detail and pride to our community. At Jones Pressure Washing, we
            don’t just clean — we care. We believe every home and property
            deserves to be treated with the same respect we’d give our own.
          </p>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-10 items-center">
            <div>
              <h2 className="font-poppins text-2xl md:text-3xl font-semibold mb-4 text-primary">
                Built on Detailing. Backed by Reliability.
              </h2>
              <p className="text-white/80 mb-4">
                From showing up on time to leaving your property sparkling
                clean, our mission is to make sure every interaction exceeds
                expectations. We proudly serve Bergen and Essex County and have
                become known for our commitment to customer satisfaction and
                consistent results.
              </p>
              <p className="text-white/80">
                When you hire Jones Pressure Washing, you&apos;re not just
                getting a cleaning service — you&apos;re partnering with someone
                who truly cares about doing things the right way.
              </p>
            </div>
            <div className="relative w-full h-80">
              <Image
                src="/about-image.jpg"
                alt="About Jones Pressure Washing"
                fill
                className="object-cover rounded-lg"
              />
            </div>
          </div>
        </div>
      </main>

      <CTASection />
      <Footer />
    </div>
  )
}

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --gold: #d4af37;
  --black: #121212;
  --white: #f5f5f5;
  --gray: #2a2a2a;
  --blue: #374151;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    /* --primary: 0 0% 9%; */
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    /* --primary: 0 0% 98%; */
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground font-inter leading-snug;
  }

  h1,
  h2,
  h3,
  h4 {
    @apply font-poppins text-primary;
  }

  h1 {
    @apply text-4xl font-bold;
  }

  h2 {
    @apply text-3xl font-bold;
  }

  h3 {
    @apply text-xl font-bold;
  }

  h4 {
    @apply font-semibold;
  }
}

@layer components {
  .side-padding {
    @apply px-8 md:px-12;
  }

  .page {
    @apply p-8 w-full h-full;
  }
}

================
File: src/app/layout.tsx
================
import type { Metadata } from 'next'
import { Inter, Poppins } from 'next/font/google'
import Navbar from '@/components/Navbar'
import Footer from '@/components/Footer'
import './globals.css'

const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
  display: 'swap'
})

const poppins = Poppins({
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-poppins',
  display: 'swap'
})

export const metadata: Metadata = {
  title: 'Jones Pressure Washing | Professional Services in New Jersey',
  description:
    'Professional pressure & soft washing services for homes and businesses in Bergen & Essex County, New Jersey.'
}

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en">
      <body className={`${inter.variable} ${poppins.variable} font-inter`}>
        <Navbar />
        {children}
        <Footer />
      </body>
    </html>
  )
}

================
File: src/app/page.tsx
================
import HeroSection from '@/components/home/HeroSection'
import ServicesSection from '@/components/home/Services'
import TrustSection from '@/components/home/TrustSection'
import ServiceAreas from '@/components/home/ServiceAreas'

export default function Home() {
  return (
    <main>
      <HeroSection />
      <ServicesSection />
      <TrustSection />
      <ServiceAreas />
    </main>
  )
}

================
File: src/components/cta/CtaModal.tsx
================
import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'

import { cn } from '@/lib/utils'
import { Button } from '../ui/button'
import { Dialog, DialogContent, DialogTrigger } from '@/components/ui/dialog'

interface CtaModalProps {
  label: string
  buttonClass?: string
  variant: any
}

export default function CtaModal({
  variant,
  label,
  buttonClass
}: CtaModalProps) {
  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button variant={variant} className={cn(buttonClass)}>
          {label}
        </Button>
      </DialogTrigger>
      <DialogContent
        aria-describedby="contact-form-modal"
        className="mx-auto p-0 border-none max-w-4xl w-[calc(100%-3rem)] shadow-lg">
        <AnimatePresence mode="wait">
          {/* {showForm ? ( */}
          <motion.div
            key="form"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ duration: 0.3, ease: 'easeInOut' }}>
            <p>form goes here</p>
          </motion.div>
          {/* ) : (
            <motion.div
              key="success"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -20 }}
              transition={{ duration: 0.3, ease: 'easeInOut' }}>
              <ContactSuccessMessage />
            </motion.div>
          )} */}
        </AnimatePresence>
      </DialogContent>
    </Dialog>
  )
}

================
File: src/components/home/HeroSection.tsx
================
import Link from 'next/link'
import { Button } from '../ui/button'
import CtaModal from '../cta/CtaModal'

const HeroSection = () => {
  return (
    <div className="relative h-screen w-full pt-[7rem] side-padding flex items-center">
      <div
        className="absolute inset-0 bg-cover bg-center z-0"
        style={{
          backgroundImage: "url('/Homepage.jpg')"
        }}>
        {/* <div className="absolute inset-0 bg-primary z-0"></div> */}
      </div>

      {/* Content */}
      <div className="bg-black-clear text-white relative z-10 h-fit flex flex-col justify-center p-8 max-w-xl shadow-xl rounded-lg">
        <h1 className="text-white mb-2">
          Professional <span className="text-primary">Pressure</span>
          <span className="text-primary">& Soft Washing</span> For <br />
          Homes and Businesses <br />
          in New Jersey
        </h1>

        <p className="text-white/90 my-4 text-lg max-w-lg">
          We treat your property like it&apos;s our own — Proudly serving our
          neighbors in Bergen & Essex County.
        </p>

        <div className="flex flex-col sm:flex-row gap-4 mt-4">
          <CtaModal label="Request Your Free Estimate" variant="default" />
          {/* <Link
            href="/contact"
            className="bg-primary hover:bg-primary/90 text-primary-black font-medium py-3 px-6 rounded-full transition-colors text-center">
            Request Your Free Estimate
          </Link>
          <Link
            href="/about"
            className="bg-transparent border border-white/30 hover:bg-white/10 text-white font-medium py-3 px-6 rounded-full transition-colors text-center">
            Learn More About Us
          </Link> */}
        </div>
      </div>
    </div>
  )
}

export default HeroSection

================
File: src/components/home/ServiceAreas.tsx
================
import Image from 'next/image'
import { FaHouse } from 'react-icons/fa6'

import { Button } from '../ui/button'

const CountyCard = ({
  county,
  description
}: {
  county: string
  description: string
}) => {
  return (
    <div className="border border-primary bg-black p-5 rounded-lg mb-4 grid grid-cols-[3rem_1fr] items-center gap-4">
      <FaHouse className="text-primary" size={28} />
      <div className="flex flex-col items-start gap-3 mb-2">
        <h3 className="text-white">{county}</h3>
        <p className="text-white">{description}</p>
      </div>
    </div>
  )
}

const ServiceAreas = () => {
  return (
    <section className="page bg-black">
      <div className="mx-auto max-w-custom">
        <h2 className="font-poppins text-3xl md:text-4xl font-bold text-white text-center mb-2">
          Proudly Serving <span className="text-primary">New Jersey</span>
        </h2>

        <p className="text-white text-center max-w-3xl mx-auto mb-12">
          We proudly provide pressure washing and soft washing services across
          New Jersey, with a strong local focus in Bergen County and Essex
          County. Whether you're a homeowner or business, you can count on our
          team for reliable, professional exterior cleaning throughout North
          Jersey.
        </p>

        <div className="grid grid-cols-1 sm:grid-cols-2 gap-10">
          <div className="space-y-6">
            <CountyCard
              county="Bergen County"
              description="Residential & commercial soft washing, pressure washing, and more"
            />

            <CountyCard
              county="Essex County"
              description="Residential & commercial soft washing, pressure washing, and more"
            />

            <p className="text-white mt-4">
              Don't see your county listed? Reach out — we may still serve your
              area.
            </p>
            <Button>Check Service Availability</Button>
          </div>
          <Image
            src="/NjGraphic.png"
            alt="New Jersey Service Map"
            width={600}
            height={800}
            className="h-auto w-[20rem] mx-auto"
          />
        </div>
      </div>
    </section>
  )
}

export default ServiceAreas

================
File: src/components/home/Services.tsx
================
import Link from 'next/link'
import { FaHouse, FaBuilding, FaDroplet, FaLayerGroup } from 'react-icons/fa6'

const ServiceCard = ({
  title,
  description,
  icon: Icon,
  iconBgColor = 'bg-primary'
}: {
  title: string
  description: string
  icon: any
  iconBgColor?: string
}) => {
  return (
    <div className="bg-black border-primary border p-8 rounded-lg flex flex-col gap-6 h-full shadow-md text-center items-center">
      <Icon className="text-primary mb-4" size={40} />
      <h3 className="mb-3">{title}</h3>
      <p className="text-white mb-4 flex-grow">{description}</p>
      <Link
        href="/services"
        className="text-primary hover:text-primary/80 font-medium transition-colors mt-2">
        Learn More
      </Link>
    </div>
  )
}

const ServicesSection = () => {
  return (
    <section className="page bg-black">
      <div className="max-w-custom mx-auto">
        <div className="text-center mb-12">
          <h2 className="text-white mb-4">
            Our Pressure & Soft Washing Services
          </h2>
          <p className="text-white mx-auto">
            We provide a full range of professional exterior cleaning services
            for homes and businesses across New Jersey — from deep pressure
            washing to gentle soft wash treatments.
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4 gap-6">
          <ServiceCard
            title="Residential Pressure Washing"
            description="Refresh your home's exterior with our specialized service. We clean driveways, decks, concrete, and more — safe, effective, and cost-applied easily."
            icon={FaHouse}
          />

          <ServiceCard
            title="Commercial Pressure Washing"
            description="Make a great first impression with spotless sidewalks, storefronts, driveways, and commercial buildings."
            icon={FaBuilding}
            iconBgColor="bg-primary"
          />

          <ServiceCard
            title="Soft Washing"
            description="Our soft washing safely removes algae, mold, and stains from roofs and siding without damaging delicate surfaces."
            icon={FaDroplet}
            iconBgColor="bg-primary"
          />

          <ServiceCard
            title="Other Services"
            description="We also offer help with holiday lighting and roof & gutter cleaning."
            icon={FaLayerGroup}
            iconBgColor="bg-primary"
          />
        </div>
      </div>
    </section>
  )
}

export default ServicesSection

================
File: src/components/home/TrustSection.tsx
================
import Image from 'next/image'
import Link from 'next/link'
import { CheckCircle } from 'lucide-react'

import { Button } from '../ui/button'

const TrustFeature = ({ text }: { text: string }) => {
  return (
    <li className="flex items-center gap-3 mb-4">
      <CheckCircle className="text-primary min-w-5" size={20} />
      <p className="text-white">{text}</p>
    </li>
  )
}

const TrustSection = () => {
  return (
    <section className="bg-secondary page">
      <div className="max-w-custom mx-auto grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="flex flex-col justify-center gap-6">
          <h2 className="text-white text-balance max-w-md">
            Why Homeowners and Businesses Trust Us
            <div className="w-full h-1 bg-primary mt-2"></div>
          </h2>

          <p className="text-white">
            We're your neighbors—providing exceptional service with neighborly
            care. We always show up on time, treat your property with care, and
            deliver results that speak for themselves!
          </p>

          <ul className="">
            <TrustFeature text="Locally owned & operated" />
            <TrustFeature text="Eco-friendly cleaning methods" />
            <TrustFeature text="On-time & reliable service" />
            <TrustFeature text="100% satisfaction guaranteed" />
          </ul>
          <Button variant="ghost">Request a Quote Today</Button>
        </div>

        <div className="flex-1 relative h-[400px] lg:h-[500px]">
          <Image
            src="/trust-image.jpg"
            alt="Professional pressure washing service"
            fill
            className="object-cover rounded-lg"
          />
        </div>
      </div>
    </section>
  )
}

export default TrustSection

================
File: src/components/ui/button.tsx
================
import * as React from 'react'
import { Slot } from '@radix-ui/react-slot'
import { cva, type VariantProps } from 'class-variance-authority'

import { cn } from '@/lib/utils'

const buttonVariants = cva(
  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',
  {
    variants: {
      variant: {
        default:
          'bg-primary text-black border border-primary font-bold transition-all shadow-lg rounded-md duration-200 hover:bg-transparent hover:text-primary',
        ghost:
          'bg-transparent text-white border border-primary font-bold shadow-lg rounded-md transition-all duration-200 hover:bg-primary hover:text-black',
        destructive:
          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',
        outline:
          'border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',
        secondary:
          'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',
        link: 'text-primary underline-offset-4 hover:underline'
      },
      size: {
        default: 'h-10 w-fit p-4',
        sm: 'h-8 rounded-md px-3 text-xs',
        lg: 'h-10 rounded-md px-8',
        icon: 'h-9 w-9'
      }
    },
    defaultVariants: {
      variant: 'default',
      size: 'default'
    }
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : 'button'
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = 'Button'

export { Button, buttonVariants }

================
File: src/components/ui/dialog.tsx
================
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogTrigger,
  DialogClose,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}

================
File: src/components/ui/navigation-menu.tsx
================
import * as React from "react"
import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu"
import { cva } from "class-variance-authority"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const NavigationMenu = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Root
    ref={ref}
    className={cn(
      "relative z-10 flex max-w-max flex-1 items-center justify-center",
      className
    )}
    {...props}
  >
    {children}
    <NavigationMenuViewport />
  </NavigationMenuPrimitive.Root>
))
NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName

const NavigationMenuList = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.List
    ref={ref}
    className={cn(
      "group flex flex-1 list-none items-center justify-center space-x-1",
      className
    )}
    {...props}
  />
))
NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName

const NavigationMenuItem = NavigationMenuPrimitive.Item

const navigationMenuTriggerStyle = cva(
  "group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent"
)

const NavigationMenuTrigger = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Trigger
    ref={ref}
    className={cn(navigationMenuTriggerStyle(), "group", className)}
    {...props}
  >
    {children}{" "}
    <ChevronDown
      className="relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180"
      aria-hidden="true"
    />
  </NavigationMenuPrimitive.Trigger>
))
NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName

const NavigationMenuContent = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Content
    ref={ref}
    className={cn(
      "left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ",
      className
    )}
    {...props}
  />
))
NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName

const NavigationMenuLink = NavigationMenuPrimitive.Link

const NavigationMenuViewport = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
>(({ className, ...props }, ref) => (
  <div className={cn("absolute left-0 top-full flex justify-center")}>
    <NavigationMenuPrimitive.Viewport
      className={cn(
        "origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]",
        className
      )}
      ref={ref}
      {...props}
    />
  </div>
))
NavigationMenuViewport.displayName =
  NavigationMenuPrimitive.Viewport.displayName

const NavigationMenuIndicator = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Indicator
    ref={ref}
    className={cn(
      "top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in",
      className
    )}
    {...props}
  >
    <div className="relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" />
  </NavigationMenuPrimitive.Indicator>
))
NavigationMenuIndicator.displayName =
  NavigationMenuPrimitive.Indicator.displayName

export {
  navigationMenuTriggerStyle,
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuContent,
  NavigationMenuTrigger,
  NavigationMenuLink,
  NavigationMenuIndicator,
  NavigationMenuViewport,
}

================
File: src/components/ui/sheet.tsx
================
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
      {children}
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}

================
File: src/components/Footer.tsx
================
import Image from 'next/image'
import Link from 'next/link'
import { Instagram, Facebook } from 'lucide-react'

const Footer = () => {
  return (
    <footer className="bg-primary-black text-white">
      <div className="py-12 px-8 md:px-16 lg:px-24">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10">
          {/* Logo and Info */}
          <div>
            <Link href="/">
              <Image
                src="/logo.png"
                alt="Jones Pressure Washing Logo"
                width={150}
                height={75}
                className="h-auto mb-4"
              />
            </Link>
            <p className="text-white/80 text-sm mt-4">
              Proudly serving Bergen & Essex County with reliable, detail-driven
              exterior cleaning.
            </p>
          </div>

          {/* Quick Links */}
          <div>
            <h3 className="font-poppins text-lg font-semibold mb-4">
              Quick Links
            </h3>
            <ul className="space-y-2">
              <li>
                <Link
                  href="/"
                  className="text-white/80 hover:text-primary transition-colors">
                  Home
                </Link>
              </li>
              <li>
                <Link
                  href="/about"
                  className="text-white/80 hover:text-primary transition-colors">
                  About
                </Link>
              </li>
              <li>
                <Link
                  href="/services"
                  className="text-white/80 hover:text-primary transition-colors">
                  Services
                </Link>
              </li>
              <li>
                <Link
                  href="/gallery"
                  className="text-white/80 hover:text-primary transition-colors">
                  Gallery
                </Link>
              </li>
              <li>
                <Link
                  href="/faqs"
                  className="text-white/80 hover:text-primary transition-colors">
                  FAQs
                </Link>
              </li>
            </ul>
          </div>

          {/* Contact Info */}
          <div>
            <h3 className="font-poppins text-lg font-semibold mb-4">
              Contact Us
            </h3>
            <div className="flex items-center gap-2 mb-3">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="h-5 w-5 text-primary"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor">
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                />
              </svg>
              <a
                href="tel:(555) 555-1234"
                className="text-white/80 hover:text-primary transition-colors">
                (555) 555-1234
              </a>
            </div>
            <div className="flex items-center gap-2 mb-6">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="h-5 w-5 text-primary"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor">
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                />
              </svg>
              <a
                href="mailto:contact@jonespwash.com"
                className="text-white/80 hover:text-primary transition-colors">
                contact@jonespwash.com
              </a>
            </div>
            <div>
              <h4 className="font-poppins text-sm font-medium mb-2">
                Follow Us
              </h4>
              <div className="flex gap-3">
                <a
                  href="https://instagram.com"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="bg-secondary-black p-2 rounded-full hover:bg-primary/20 transition-colors">
                  <Instagram size={18} className="text-white" />
                </a>
                <a
                  href="https://facebook.com"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="bg-secondary-black p-2 rounded-full hover:bg-primary/20 transition-colors">
                  <Facebook size={18} className="text-white" />
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Copyright */}
      <div className="py-4 px-8 md:px-16 lg:px-24 border-t border-white/10 text-center">
        <div className="flex justify-between items-center">
          <Link
            href="/contact"
            className="bg-primary hover:bg-primary/90 text-primary-black font-medium py-2 px-4 rounded-full transition-colors text-sm">
            Request a Quote
          </Link>
          <p className="text-white/60 text-xs">
            © {new Date().getFullYear()} Jones Pressure Washing. All rights
            reserved. |{' '}
            <Link href="/privacy" className="hover:text-primary">
              Privacy Policy
            </Link>
          </p>
        </div>
      </div>
    </footer>
  )
}

export default Footer

================
File: src/components/Navbar.tsx
================
'use client'

import Link from 'next/link'
import Image from 'next/image'
import { Menu } from 'lucide-react'
import { useState } from 'react'

import {
  NavigationMenu,
  NavigationMenuItem,
  NavigationMenuList,
  NavigationMenuLink,
  NavigationMenuContent,
  NavigationMenuTrigger
} from '@/components/ui/navigation-menu'
import { Sheet, SheetTrigger, SheetContent } from '@/components/ui/sheet'

const navLinks = [
  { label: 'Home', href: '/' },
  { label: 'About', href: '/about' },
  { label: 'Services', href: '/services' },
  { label: 'Gallery', href: '/gallery' },
  { label: 'FAQs', href: '/faqs' }
]

const Navbar = () => {
  const [open, setOpen] = useState(false)

  return (
    <header className="bg-transparent text-white w-full font-inter z-50 fixed top-0">
      <div className="bg-nav flex items-center justify-between side-padding">
        {/* Logo */}
        <Link href="/" className="flex items-center">
          <Image
            src="/logo-gray.png"
            alt="Jones Pressure Washing"
            width={120}
            height={60}
            className="h-auto w-auto"
            priority
          />
        </Link>

        {/* Desktop Navigation */}
        <nav className="hidden md:flex items-center gap-8">
          <NavigationMenu>
            <NavigationMenuList className="flex gap-6">
              {navLinks.map(link => {
                if (link.label === 'Services') {
                  return (
                    <NavigationMenuItem key={link.label}>
                      <NavigationMenuTrigger className="transition-all duration-200 ease-in-out text-white hover:text-primary px-2 py-1 rounded-md bg-transparent hover:bg-white/10 focus:bg-white/10 font-normal">
                        Services
                      </NavigationMenuTrigger>
                      <NavigationMenuContent className="bg-secondary-black text-white rounded-lg mt-2 p-2 min-w-[200px] shadow-md border border-white/10">
                        <ul className="flex flex-col gap-2">
                          <li>
                            <Link
                              href="/services/pressure-washing"
                              className="block px-4 py-2 rounded-md hover:bg-white/10 transition-all duration-200 ease-in-out">
                              Pressure Washing
                            </Link>
                          </li>
                          <li>
                            <Link
                              href="/services/soft-washing"
                              className="block px-4 py-2 rounded-md hover:bg-white/10 transition-all duration-200 ease-in-out">
                              Soft Washing
                            </Link>
                          </li>
                        </ul>
                      </NavigationMenuContent>
                    </NavigationMenuItem>
                  )
                }
                return (
                  <NavigationMenuItem key={link.href}>
                    <Link href={link.href} legacyBehavior passHref>
                      <NavigationMenuLink className="transition-all duration-200 ease-in-out text-white hover:text-primary px-2 py-1 rounded-md">
                        {link.label}
                      </NavigationMenuLink>
                    </Link>
                  </NavigationMenuItem>
                )
              })}
            </NavigationMenuList>
          </NavigationMenu>

          <Link
            href="/contact"
            className="bg-primary hover:bg-primary/90 text-primary-black font-medium py-2 px-4 rounded-full transition-colors">
            Get a Quote
          </Link>
        </nav>

        {/* Mobile Menu */}
        <div className="md:hidden">
          <Sheet open={open} onOpenChange={setOpen}>
            <SheetTrigger className="text-white">
              <Menu size={28} />
            </SheetTrigger>
            <SheetContent
              side="right"
              className="bg-primary-black text-white p-6 w-[260px]">
              <div className="flex flex-col gap-6 mt-10">
                {navLinks.map(link => (
                  <Link
                    key={link.href}
                    href={link.href}
                    onClick={() => setOpen(false)}
                    className="text-white hover:text-primary font-inter text-lg transition-all">
                    {link.label}
                  </Link>
                ))}
                <div className="mt-4">
                  <p className="text-sm text-white/70 mb-2">Services</p>
                  <div className="flex flex-col gap-3 ml-2">
                    <Link
                      href="/services"
                      onClick={() => setOpen(false)}
                      className="text-white hover:text-primary font-inter text-lg transition-all">
                      All Services
                    </Link>
                    <Link
                      href="/services/pressure-washing"
                      onClick={() => setOpen(false)}
                      className="text-white hover:text-primary text-base transition-all">
                      Pressure Washing
                    </Link>
                    <Link
                      href="/services/soft-washing"
                      onClick={() => setOpen(false)}
                      className="text-white hover:text-primary text-base transition-all">
                      Soft Washing
                    </Link>
                  </div>
                </div>
                <Link
                  href="/contact"
                  onClick={() => setOpen(false)}
                  className="bg-primary text-primary-black text-center font-medium py-2 px-4 rounded-full transition-colors mt-6">
                  Get a Quote
                </Link>
              </div>
            </SheetContent>
          </Sheet>
        </div>
      </div>
    </header>
  )
}

export default Navbar

================
File: src/lib/utils.ts
================
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

================
File: .eslintrc.js
================
module.exports = {
  env: {
    browser: true,
    es2021: true
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:import/recommended',
    'prettier',
    'next/core-web-vitals',
    'next/typescript'
  ],
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module'
  },
  settings: {
    react: {
      version: 'detect'
    }
  },
  rules: {
    'prettier/prettier': 'error',
    'react/prop-types': 'off',
    'no-unused-vars': 'warn'
  }
}

================
File: .eslintrc.json
================
{
  "extends": ["next/core-web-vitals", "next/typescript"]
}

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: .prettierrc
================
{
    "tabWidth": 2,
    "semi": false,
    "singleQuote": true,
    "trailingComma": "none",
    "bracketSpacing": true,
    "jsxBracketSameLine": true,
    "arrowParens": "avoid",
    "requirePragma": false,
    "insertPragma": false,
    "proseWrap": "never"
  }

================
File: components.json
================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}

================
File: next.config.mjs
================
/** @type {import('next').NextConfig} */
const nextConfig = {
  images: {
    remotePatterns: [
      {
        protocol: 'https',
        hostname: 'placehold.co',
        port: '',
        pathname: '/**' // Allows any path under this hostname
      }
    ]
  }
}

export default nextConfig

================
File: package.json
================
{
  "name": "my-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@radix-ui/react-alert-dialog": "^1.1.13",
    "@radix-ui/react-dialog": "^1.1.13",
    "@radix-ui/react-navigation-menu": "^1.2.12",
    "@radix-ui/react-slot": "^1.2.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.509.0",
    "framer-motion": "^12.5.0",
    "next": "14.2.18",
    "react": "^18",
    "react-dom": "^18",
    "react-icons": "^5.5.0",
    "tailwind-merge": "^3.3.0",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.2.23",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

================
File: tailwind.config.ts
================
import type { Config } from 'tailwindcss'
import tailwindcssAnimate from 'tailwindcss-animate'

const config: Config = {
  darkMode: ['class'],
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}'
  ],
  theme: {
    extend: {
      colors: {
        background: 'hsl(var(--background))',
        foreground: 'hsl(var(--foreground))',
        primary: {
          DEFAULT: 'var(--gold)'
        },
        secondary: {
          DEFAULT: 'var(--gray)',
          foreground: 'hsl(var(--secondary-foreground))'
        },
        accent: {
          DEFAULT: 'var(--blue)',
          white: 'var(--white)',
          black: 'var(--black)'
        },
        black: {
          DEFAULT: 'var(--black)',
          clear: 'rgba(0,0,0,0.65)'
        },
        white: {
          DEFAULT: 'var(--white)'
        },
        nav: {
          DEFAULT: 'rgba(0,0,0,0.65)'
        },
        card: {
          DEFAULT: 'hsl(var(--card))',
          foreground: 'hsl(var(--card-foreground))'
        },
        popover: {
          DEFAULT: 'hsl(var(--popover))',
          foreground: 'hsl(var(--popover-foreground))'
        },
        muted: {
          DEFAULT: 'hsl(var(--muted))',
          foreground: 'hsl(var(--muted-foreground))'
        },
        destructive: {
          DEFAULT: 'hsl(var(--destructive))',
          foreground: 'hsl(var(--destructive-foreground))'
        },
        border: 'hsl(var(--border))',
        input: 'hsl(var(--input))',
        ring: 'hsl(var(--ring))',
        chart: {
          '1': 'hsl(var(--chart-1))',
          '2': 'hsl(var(--chart-2))',
          '3': 'hsl(var(--chart-3))',
          '4': 'hsl(var(--chart-4))',
          '5': 'hsl(var(--chart-5))'
        }
      },
      maxWidth: {
        custom: '1400px'
      },
      fontFamily: {
        poppins: ['var(--font-poppins)'],
        inter: ['var(--font-inter)']
      },
      borderRadius: {
        lg: 'var(--radius)',
        md: 'calc(var(--radius) - 2px)',
        sm: 'calc(var(--radius) - 4px)'
      }
    }
  },
  plugins: [tailwindcssAnimate]
}

export default config

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
